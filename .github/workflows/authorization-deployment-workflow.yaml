name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Trigger the workflow manually'
        required: true
        default: 'none'

env:
  ACR_REGISTRY: sanderwieringa.azurecr.io
  ACR_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  ACR_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  AKS_RESOURCE_GROUP: 9Gag-Backend
  AKS_CLUSTER_NAME: 9Gag-Backend
  AKS_NAMESPACE: default
  K8S_DEPLOYMENT_NAME: authorizationservice

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build .NET app
        run: |
          cd AuthorizationService
          dotnet build

      - name: Run tests
        run: |
          cd AuthorizationServiceTests
          dotnet test

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_REGISTRY }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd PostService
          docker build --tag ${{ env.ACR_REGISTRY }}/${{ env.K8S_DEPLOYMENT_NAME }} .
          docker push ${{ env.ACR_REGISTRY }}/${{ env.K8S_DEPLOYMENT_NAME }}

      - name: Set up Azure CLI
        run: |
           curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up AKS cluster
        run: |
          az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f authorization-depl.yaml -n ${{ env.AKS_NAMESPACE }}
          kubectl rollout restart deployment authorization-depl
